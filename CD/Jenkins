pipeline {
    agent any
    
    parameters {
        string(name: 'IMAGE_TAG', defaultValue: 'zwttt/ml-pipeline-2:latest', description: 'Docker镜像标签')
    }

    environment {
        DOCKERHUB_CREDS = credentials('ba7bf351-123e-409d-8d95-1c72fb78ffe4')

        POSTGRES_HOST=credentials('db-host')
        POSTGRES_PORT=credentials('db-port')
        POSTGRES_DB=credentials('db-name')
        POSTGRES_USER=credentials('db-user')
        POSTGRES_PASSWORD=credentials('db-password')

        LC_ALL = "en_US.UTF-8"
        LANG    = "en_US.UTF-8"
        LANGUAGE = "en_US.UTF-8"
    }

    stages {
        stage('Login to DockerHub') {
            steps {
                sh 'echo $DOCKERHUB_CREDS_PSW | docker login -u $DOCKERHUB_CREDS_USR --password-stdin'
            }
        }

        stage('Deploy Container') {
            steps {
                script {
                    withCredentials([
                            string(credentialsId: 'db-host', variable: 'DB_HOST'),
                            string(credentialsId: 'db-name', variable: 'DB_NAME'),
                            string(credentialsId: 'db-user', variable: 'DB_USER'),
                            string(credentialsId: 'db-port', variable: 'DB_PORT'),
                            string(credentialsId: 'db-password', variable: 'DB_PASSWORD')
                    ]) {
                        // 强制清理旧容器
                        sh '''
                            docker stop mle-pipeline-2 || true
                            docker rm mle-pipeline-2 || true
                        '''
                        // 启动新容器
                        sh "docker run -d --name mle-pipeline-2 -p 5000 ${params.IMAGE_TAG}"
                    }
                }
            }
        }
    }

    post {
        always {
            sh 'docker logout'
        }
    }
}